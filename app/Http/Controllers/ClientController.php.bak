<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Client;
use App\Models\Tanent;
use Auth;
use App\Models\State;
use App\Models\City;
use increment;

class ClientController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        //return $request;
        if($request->search!=''){
             $clients=Client::where('first_name','like', '%'.$request->search.'%')->paginate(10);
        }
        else{
            $clients=Client::orderBy('created_at','DESC')->paginate(10);
            
        }
        return view('clients.index',compact('client'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $states= State::get();
        $cities =City::get();
        return view('clients.create',compact('states','cities'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        //return $request;
        $request['first_name']=ucfirst(strtolower(trans($request->first_name)));
        if($request->middle_name!=''){
        $request['middle_name']=ucfirst(strtolower(trans($request->middle_name)));
        }
        if($request->last_name!=''){
        $request['last_name']=ucfirst(strtolower(trans($request->last_name)));
        }
        //return $request;
         $request['mobile']='+'.$request->coun_code.$request->mobile;

        $tanents=Tanent::where('id','1')->select('id')->first();
        $request['company_id']=$tanents->id;
        $request['address_1']=ucwords(strtolower($request->address_1));
        $request['address_2']=ucwords(strtolower($request->address_2));
        //$request['user_id']=auth()->user()->id;
        
        $lastfetch=Client::select('client_code')->where('client_code','!=',null)->orderBy('created_at','DESC')->first();
        /*if($lastfetch==''){
        return $request['client_code']='A10001';
        }
        else{
            $request['client_code']=$lastfetch->client_code + 1;
        }*/

        $client=Client::create($request->except('_token'));
        return redirect()->route('client.index');
    }

    public function getCity(Request $request)
    {
        //return $request;
         $city = City::where('state_id',$request->state_id)->select('id','name')->get();
        return response()->json(['city'=>$city]);
    }

    public function clientsearch(Request $request){
       // return $request;
        if($request->get('query')!=''){
            $query = $request->get('query');
            //$query=ucfirst($request->query);
        $client=Client::where('first_name','like', '%'.$query.'%')->select('first_name as name','id')->get(); 
        }
       return response()->json($client);
    }

    public function companysearch(Request $request){
        if($request->get('query')!=''){
             $query = $request->get('query');
                $searchcategory = Client::where('company_name','like', '%'.$query.'%')->select('id','company_name as name')->get();
        }
        return response()->json($searchcategory);
    }
    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */

    public function clientstatus(Request $request,$id)
    {
        try{
            //return $id;
            //return $request;
            $client = Client::where('id',$id)->update(['status'=>$request['stat']]);
           return \Response::json(["status" => "success", "message" => "Client updated successfully!"]);
        }catch (Exception $e) {
            return \Response::json(["status" => "danger", "message" => $e->getMessage()]);
        }
    }


    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //return $id;
        $client=Client::find($id);
        $states= State::get();
        $cities = City::get();
        return view('clients.edit',compact('states','cities','client'));

    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //return $request;
        if($request->coun_code !=''){
        $request['mobile']='+'.$request->coun_code.$request->mobile;
        }
        $request['first_name']=ucfirst(strtolower(trans($request->first_name)));
        $request['middle_name']=ucfirst(strtolower(trans($request->middle_name)));
        $request['last_name']=ucfirst(strtolower(trans($request->last_name)));
        
        $request['address_1']=ucwords(strtolower($request->address_1));
        $request['address_2']=ucwords(strtolower($request->address_2));
        $client=Client::where('id',$id)->update($request->except('_token','_method','coun_code'));
        return redirect()->back();

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }

    public function clientdelete($id){
        //return $id;
         $client = Client::where('id',$id)->forceDelete();

        return \Response::json(['status'=>'success', 'message'=>'client deleted successfully.']);

    }
}
